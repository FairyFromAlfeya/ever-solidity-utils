.version sol 0.63.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDMSGADDR
	}
	IF
}
PUSHCONT {
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDMSGADDR
	}
	IF
}
IFELSE
ENDS
CALLREF {
	CALL $_getTargetBalanceInternal_141d6ea7_internal_macro$
}
SWAP
GETGLOB 9
.loc ../contracts/reservation/abstract/Reservable.sol, 63
ROT
PUSHINT 0
RAWRESERVE
.loc ../contracts/reservation/abstract/Reservable.sol, 64
ACCEPT
.loc ../contracts/reservation/abstract/Reservable.sol, 67
OVER
ISNULL
PUSHCONT {
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
}
PUSHCONT {
	PUSH2 S1, S1
	ISNULL
	THROWIF 63
}
IFELSE
.loc ../contracts/reservation/abstract/Reservable.sol, 70
DUP
PARSEMSGADDR
INDEX 3
PLDU 256
EQINT 0
OVER
MYADDR
SDEQ
OR
PUSHCONT {
	.loc ../contracts/reservation/abstract/Reservable.sol, 71
	OVER
	NIP
	.loc ../contracts/reservation/abstract/Reservable.sol, 0
}
IF
.loc ../contracts/reservation/abstract/Reservable.sol, 77
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/reservation/abstract/Reservable.sol, 0
DROP2
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	_getTargetBalanceInternal_141d6ea7_internal
.type	_getTargetBalanceInternal_141d6ea7_internal, @function
CALL $_getTargetBalanceInternal_141d6ea7_internal_macro$

.macro _getTargetBalanceInternal_141d6ea7_internal_macro
.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 35
PUSHINT 1000000000
.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 0

.macro setPriceAndScale
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 43
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDMSGADDR
	LDU 256
	LDI 16
	LDREF
	ENDS
	CTOS
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDMSGADDR
	}
	IF
}
PUSHCONT {
	LDMSGADDR
	LDU 256
	LDI 16
	LDREF
	ENDS
	CTOS
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDMSGADDR
	}
	IF
}
IFELSE
ENDS
.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 0
CALLREF {
	CALL $setPriceAndScale_9bbdae6e_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setPriceAndScale_9bbdae6e_internal_macro
.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 43
CALLREF {
	CALL $_getTargetBalanceInternal_141d6ea7_internal_macro$
}
OVER
GETGLOB 9
.loc ../contracts/reservation/abstract/Reservable.sol, 34
ROT
PUSHINT 0
RAWRESERVE
.loc ../contracts/reservation/abstract/Reservable.sol, 37
OVER
ISNULL
PUSHCONT {
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
}
PUSHCONT {
	PUSH2 S1, S1
	ISNULL
	THROWIF 63
}
IFELSE
.loc ../contracts/reservation/abstract/Reservable.sol, 40
DUP
PARSEMSGADDR
INDEX 3
PLDU 256
EQINT 0
OVER
MYADDR
SDEQ
OR
PUSHCONT {
	.loc ../contracts/reservation/abstract/Reservable.sol, 41
	OVER
	NIP
	.loc ../contracts/reservation/abstract/Reservable.sol, 0
}
IF
.loc ../contracts/reservation/abstract/Reservable.sol, 44
BLKSWAP 4, 3
.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 52
DROP
XCPU S1, S2
GETGLOB 11
ROT
NEWC
STU 256
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 11
.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 53
GETGLOB 12
SWAP
NEWC
STI 16
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 12
.loc ../contracts/reservation/abstract/Reservable.sol, 47
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/reservation/abstract/Reservable.sol, 0
DROP2
.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 0

.macro getPrices
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 56
OVER
PUSHCONT {
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
}
IFELSE
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 0
CALLREF {
	CALL $getPrices_daa39fb2_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro getPrices_daa39fb2_internal_macro
.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 56
CALLREF {
	CALL $_getTargetBalanceInternal_141d6ea7_internal_macro$
}
.loc ../contracts/reservation/abstract/Reservable.sol, 13
PUSHINT 0
RAWRESERVE
.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 66
TUPLE 0
NEWC
PUSHSLICE x52656d61696e696e672067617320746f3a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
ROLL 3
CALLREF {
	CALL $convertAddressToHexString_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $console_no_obj_log_41304fac_macro$
}
.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 68
NEWDICT
DUP
.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 70
PUSHINT 0
NEWDICT
PAIR
.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 72
ROLL 5
SECOND
PUSHINT 0
NULL
PUSHCONT {
	PUSH2 S1, S2
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	DROP
	DUP
	POP S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 73
	DUP
	GETGLOB 11
	PUSHINT 267
	DICTGET
	NULLSWAPIFNOT
	NIP
	PUSHCONT {
		.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 74
		DUP
		GETGLOB 11
		PUSHINT 267
		DICTGET
		ZEROSWAPIFNOT
		PUSHCONT {
			PLDU 256
		}
		IF
		PUSH2 S1, S6
		ROT
		NEWC
		STU 256
		ROTREV
		PUSHINT 267
		DICTSETB
		POP S6
		.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 75
		DUP
		GETGLOB 12
		PUSHINT 267
		DICTGET
		ZEROSWAPIFNOT
		PUSHCONT {
			PLDI 16
		}
		IF
		PUSH2 S1, S5
		ROT
		NEWC
		STI 16
		ROTREV
		PUSHINT 267
		DICTSETB
		POP S5
	}
	PUSHCONT {
		.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 77
		PUSH2 S0, S3
		UNPAIR
		OVER
		INC
		ROLLREV 3
		PUSHINT 32
		DICTUSET
		PAIR
		POP S4
	}
	IFELSE
	.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 0
	OVER
	INC
	POP S2
}
WHILE
BLKDROP 3
.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 81
DUP
FIRST
PUSHCONT {
	.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 95
	PUSH S3
	GETGLOB 9
	NOW
	PUSH3 S3, S4, S5
	PUSH S10
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	STSLICECONST x1_
	STSLICE
	PUSHINT 1
	STUR 111
	ROLLREV 6
	NEWC
	STSLICECONST x69d91b9d
	STDICT
	STDICT
	SWAP
	UNPAIR
	XCHG S2
	STU 32
}
PUSHCONT {
	.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 82
	PUSH S3
	GETGLOB 9
	NOW
	PUSH3 S4, S5, S7
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	STSLICECONST x1_
	STSLICE
	PUSHINT 1
	STUR 111
	ROLLREV 5
	NEWC
	STSLICECONST x0de8965c
	STDICT
}
IFELSE
STDICT
STU 64
STSLICE
STREF
STBREFR
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../examples/contracts/prices/PriceAggregatorExample.sol, 0
BLKDROP 5

.macro getTargetBalance
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/reservation/abstract/TargetBalance.sol, 21
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/reservation/abstract/TargetBalance.sol, 0
CALLREF {
	CALL $getTargetBalance_eb175b7e_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 4252195830
	STUR 130
	STU 128
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	STU 128
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getTargetBalance_eb175b7e_internal_macro
.loc ../contracts/reservation/abstract/TargetBalance.sol, 32
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
CALLREF {
	CALL $_getTargetBalanceInternal_141d6ea7_internal_macro$
}
.loc ../contracts/reservation/abstract/TargetBalance.sol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDU 32
LDDICT
LDDICT
ENDS
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 1
	OVER
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 32
	}
	IF
	NEWDICT
	DUP
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STU 32
STDICT
STDICT
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice hasPubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; hasPubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.globl	console_with_obj_log_41304fac
.type	console_with_obj_log_41304fac, @function
CALL $console_with_obj_log_41304fac_macro$

.macro console_with_obj_log_41304fac_macro
.loc ../node_modules/locklift/src/console.sol, 10
DUP
PUSHREFSLICE {
	.blob xc600fffffffffffffffffffffffffffffffffffffffffffffffffe2468acf13579bc0000000000000000000000000903f4294_
}
NEWC
STSLICE
STREF
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../node_modules/locklift/src/console.sol, 0

.globl	console_no_obj_log_41304fac
.type	console_no_obj_log_41304fac, @function
CALL $console_no_obj_log_41304fac_macro$

.macro console_no_obj_log_41304fac_macro
.loc ../node_modules/locklift/src/console.sol, 10
PUSHREFSLICE {
	.blob xc600fffffffffffffffffffffffffffffffffffffffffffffffffe2468acf13579bc0000000000000000000000000903f4294_
}
NEWC
STSLICE
STREF
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../node_modules/locklift/src/console.sol, 0

.macro public_function_selector
DUP
PUSHINT 888240241
EQUAL
IFJMPREF {
	CALL $setPriceAndScale$
}
DUP
PUSHINT 1420773710
EQUAL
IFJMPREF {
	CALL $getPrices$
}
DUP
PUSHINT 1772174412
EQUAL
IFJMPREF {
	CALL $constructor$
}
DUP
PUSHINT 2104712182
EQUAL
IFJMPREF {
	CALL $getTargetBalance$
}

