.version sol 0.63.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDMSGADDR
	}
	IF
}
PUSHCONT {
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDMSGADDR
	}
	IF
}
IFELSE
ENDS
GETGLOB 9
.loc ../contracts/reservation/abstract/Reservable.sol, 63
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/reservation/abstract/Reservable.sol, 64
ACCEPT
.loc ../contracts/reservation/abstract/Reservable.sol, 67
OVER
ISNULL
PUSHCONT {
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
}
PUSHCONT {
	PUSH2 S1, S1
	ISNULL
	THROWIF 63
}
IFELSE
.loc ../contracts/reservation/abstract/Reservable.sol, 70
DUP
PARSEMSGADDR
INDEX 3
PLDU 256
EQINT 0
OVER
MYADDR
SDEQ
OR
PUSHCONT {
	.loc ../contracts/reservation/abstract/Reservable.sol, 71
	OVER
	NIP
	.loc ../contracts/reservation/abstract/Reservable.sol, 0
}
IF
.loc ../examples/contracts/upgrade/VersionExample.sol, 20
PUSHINT 1
CALLREF {
	CALL $_setCurrentVersionInternal_8d3821f4_internal_macro$
}
.loc ../contracts/reservation/abstract/Reservable.sol, 77
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/reservation/abstract/Reservable.sol, 0
DROP2
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro getVersion
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgrade/abstract/Version.sol, 18
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/upgrade/abstract/Version.sol, 0
CALLREF {
	CALL $getVersion_0d8e6e2c_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2913553711
	STUR 130
	STU 32
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	STU 32
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getVersion_0d8e6e2c_internal_macro
.loc ../contracts/upgrade/abstract/Version.sol, 29
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 10
.loc ../contracts/upgrade/abstract/Version.sol, 0

.macro getPreviousVersion
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgrade/abstract/Version.sol, 32
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/upgrade/abstract/Version.sol, 0
CALLREF {
	CALL $getPreviousVersion_754dc93a_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3575130416
	STUR 130
	STU 32
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	STU 32
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getPreviousVersion_754dc93a_internal_macro
.loc ../contracts/upgrade/abstract/Version.sol, 43
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
GETGLOB 11
.loc ../contracts/upgrade/abstract/Version.sol, 0

.globl	_setCurrentVersionInternal_8d3821f4_internal
.type	_setCurrentVersionInternal_8d3821f4_internal, @function
CALL $_setCurrentVersionInternal_8d3821f4_internal_macro$

.macro _setCurrentVersionInternal_8d3821f4_internal_macro
.loc ../contracts/upgrade/abstract/Version.sol, 50
GETGLOB 10
PUSHCONT {
	.loc ../contracts/upgrade/abstract/Version.sol, 51
	GETGLOB 10
	SETGLOB 11
	.loc ../contracts/upgrade/abstract/Version.sol, 0
}
IF
.loc ../contracts/upgrade/abstract/Version.sol, 54
DUP
SETGLOB 10
.loc ../contracts/upgrade/abstract/Version.sol, 57
GETGLOB 11
SWAP
PUSHSLICE xc00000000000000000000000000dddc7d4
NEWC
STSLICE
STU 32
STU 32
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/upgrade/abstract/Version.sol, 0

.globl	_setPreviousVersionInternal_a385330c_internal
.type	_setPreviousVersionInternal_a385330c_internal, @function
CALL $_setPreviousVersionInternal_a385330c_internal_macro$

.macro _setPreviousVersionInternal_a385330c_internal_macro
.loc ../contracts/upgrade/abstract/Version.sol, 67
SETGLOB 11
.loc ../contracts/upgrade/abstract/Version.sol, 0

.globl	_getCurrentVersionInternal_9e782595_internal
.type	_getCurrentVersionInternal_9e782595_internal, @function
CALL $_getCurrentVersionInternal_9e782595_internal_macro$

.macro _getCurrentVersionInternal_9e782595_internal_macro
.loc ../contracts/upgrade/abstract/Version.sol, 74
GETGLOB 10
.loc ../contracts/upgrade/abstract/Version.sol, 0

.globl	_getPreviousVersionInternal_19dd96b2_internal
.type	_getPreviousVersionInternal_19dd96b2_internal, @function
CALL $_getPreviousVersionInternal_19dd96b2_internal_macro$

.macro _getPreviousVersionInternal_19dd96b2_internal_macro
.loc ../contracts/upgrade/abstract/Version.sol, 80
GETGLOB 11
.loc ../contracts/upgrade/abstract/Version.sol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDU 32
LDU 32
LDU 32
ENDS
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 0
	DUP
	PUSHINT 1
	PUSH S3
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 32
	}
	IF
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STU 32
STU 32
STU 32
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice hasPubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; hasPubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro public_function_selector
DUP
PUSHINT 766070063
EQUAL
IFJMPREF {
	CALL $getVersion$
}
DUP
PUSHINT 1427646768
EQUAL
IFJMPREF {
	CALL $getPreviousVersion$
}
DUP
PUSHINT 1772174412
EQUAL
IFJMPREF {
	CALL $constructor$
}

