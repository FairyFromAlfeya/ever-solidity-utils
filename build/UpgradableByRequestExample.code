.version sol 0.61.2

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDMSGADDR
	}
	IF
}
PUSHCONT {
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDMSGADDR
	}
	IF
}
IFELSE
ENDS
DUP
GETGLOB 9
.loc ../contracts/validation/abstract/Validatable.sol, 28
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/validation/abstract/Validatable.sol, 29
ACCEPT
.loc ../contracts/validation/abstract/Validatable.sol, 32
OVER
ISNULL
PUSHCONT {
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
}
PUSHCONT {
	PUSH2 S1, S1
	ISNULL
	THROWIF 63
}
IFELSE
.loc ../contracts/validation/abstract/Validatable.sol, 35
DUP
PARSEMSGADDR
INDEX 3
PLDU 256
EQINT 0
OVER
MYADDR
SDEQ
OR
PUSHCONT {
	.loc ../contracts/validation/abstract/Validatable.sol, 36
	OVER
	NIP
	.loc ../contracts/validation/abstract/Validatable.sol, 0
}
IF
.loc ../contracts/validation/abstract/Validatable.sol, 39
ROLL 3
PUSHINT 202
.loc ../contracts/validation/abstract/Validatable.sol, 121
OVER
ISNULL
PUSHCONT {
	.loc ../contracts/validation/abstract/Validatable.sol, 122
	PUSH2 S1, S1
	ISNULL
	THROWIF 63
	MYADDR
	PUSH S2
	CALLREF {
		CALL $Validation_no_obj_notEquals_macro$
	}
	.loc ../contracts/validation/abstract/Validatable.sol, 0
}
IFNOT
.loc ../contracts/validation/abstract/Validatable.sol, 128
DROP2
.loc ../contracts/validation/abstract/Validatable.sol, 42
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/validation/abstract/Validatable.sol, 0
DROP2
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 21
CALLREF {
	CALL $_getFactoryInternal_internal_macro$
}
CALLREF {
	CALL $_setUpgraderInternal_internal_macro$
}
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 22
PUSHINT 1
PUSHINT 0
CALLREF {
	CALL $_setVersionInternal_internal_macro$
}
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro upgrade
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 25
OVER
PUSHCONT {
	LDU 32
	LDREF
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 32
	LDREF
}
IFELSE
LDMSGADDR
ENDS
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 0
CALLREF {
	CALL $upgrade_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro upgrade_internal_macro
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 25
DUP
GETGLOB 9
.loc ../contracts/validation/abstract/Validatable.sol, 65
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/validation/abstract/Validatable.sol, 68
OVER
ISNULL
PUSHCONT {
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
}
PUSHCONT {
	PUSH2 S1, S1
	ISNULL
	THROWIF 63
}
IFELSE
.loc ../contracts/validation/abstract/Validatable.sol, 71
DUP
PARSEMSGADDR
INDEX 3
PLDU 256
EQINT 0
OVER
MYADDR
SDEQ
OR
PUSHCONT {
	.loc ../contracts/validation/abstract/Validatable.sol, 72
	OVER
	NIP
	.loc ../contracts/validation/abstract/Validatable.sol, 0
}
IF
.loc ../contracts/upgrade/abstract/UpgradableByRequest.sol, 27
GETGLOB 13
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 13
SDEQ
AND
THROWIFNOT 207
.loc ../contracts/upgrade/abstract/UpgradableByRequest.sol, 32
PUSH S4
.loc ../contracts/validation/abstract/Validatable.sol, 107
PUSHINT 204
CALLREF {
	CALL $Validation_no_obj_notEmpty_macro$
}
.loc ../contracts/validation/abstract/Validatable.sol, 111
PUSH S3
.loc ../contracts/validation/abstract/Validatable.sol, 92
MYADDR
PUSHINT 202
CALLREF {
	CALL $Validation_no_obj_notEquals_macro$
}
.loc ../contracts/validation/abstract/Validatable.sol, 97
BLKSWAP 3, 3
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 38
DROP
CALLREF {
	CALL $_getUpgraderInternal_internal_macro$
}
CALLREF {
	CALL $_getFactoryInternal_internal_macro$
}
CALLREF {
	CALL $_getVersionInternal_internal_macro$
}
ROLL 4
CALLREF {
	CALL $_getIdInternal_internal_macro$
}
NEWC
STU 32
STU 32
STU 32
STSLICE
SWAP
NEWC
STSLICE
STBREFR
ENDC
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 46
OVER
SETCODE
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 47
SWAP
CTOS
DUP
PUSHSLICE x8adb35
SDEQ
PUSHCONT {
	PLDREFIDX 1
	CTOS
}
IF
PLDREF
CTOS
BLESS
POP C3
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 49
CALLREF {
	CALL $_onUpgrade_internal_macro$
}
.loc ../contracts/validation/abstract/Validatable.sol, 78
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/validation/abstract/Validatable.sol, 0
DROP2
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 0

.globl	_onUpgrade_internal
.type	_onUpgrade_internal, @function
CALL $_onUpgrade_internal_macro$

.macro _onUpgrade_internal_macro
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 54
PUSHINT 0
SETGLOB 10
PUSHINT 0
SETGLOB 11
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 12
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 13
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 57
CTOS
LDU 32
LDU 32
LDU 32
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
ENDS
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 72
ROLL 4
CALLREF {
	CALL $_setIdInternal_internal_macro$
}
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 73
SWAP2
CALLREF {
	CALL $_setVersionInternal_internal_macro$
}
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 74
SWAP
CALLREF {
	CALL $_setFactoryInternal_internal_macro$
}
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 75
CALLREF {
	CALL $_setUpgraderInternal_internal_macro$
}
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 77
TUPLE 0
NEWC
PUSHSLICE x4e65772076657273696f6e3a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $_getVersionInternal_internal_macro$
}
PUSHINT 0
BLKPUSH 2, 0
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $console_no_obj_log_macro$
}
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 0

.globl	_getDeployParamsInternal_internal
.type	_getDeployParamsInternal_internal, @function
CALL $_getDeployParamsInternal_internal_macro$

.macro _getDeployParamsInternal_internal_macro
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 86
CALLREF {
	CALL $_getIdInternal_internal_macro$
}
NEWC
STU 32
ENDC
.loc ../examples/contracts/upgradable/UpgradableByRequestExample.sol, 0

.macro getUpgrader
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgrade/abstract/UpgradableByRequest.sol, 39
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/upgrade/abstract/UpgradableByRequest.sol, 0
CALLREF {
	CALL $getUpgrader_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST xae0553ee
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STSLICE
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getUpgrader_internal_macro
.loc ../contracts/upgrade/abstract/UpgradableByRequest.sol, 50
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
CALLREF {
	CALL $_getUpgraderInternal_internal_macro$
}
.loc ../contracts/upgrade/abstract/UpgradableByRequest.sol, 0

.macro requestUpgrade
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgrade/abstract/UpgradableByRequest.sol, 53
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDMSGADDR
	}
	IF
}
PUSHCONT {
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDMSGADDR
	}
	IF
}
IFELSE
ENDS
.loc ../contracts/upgrade/abstract/UpgradableByRequest.sol, 0
CALLREF {
	CALL $requestUpgrade_internal_macro$
}
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro requestUpgrade_internal_macro
.loc ../contracts/upgrade/abstract/UpgradableByRequest.sol, 53
PUSHINT 1000000000
.loc ../contracts/validation/abstract/Validatable.sol, 52
PUSHINT 0
RAWRESERVE
.loc ../contracts/validation/abstract/Validatable.sol, 53
DUP
PUSHINT 202
.loc ../contracts/validation/abstract/Validatable.sol, 121
OVER
ISNULL
PUSHCONT {
	.loc ../contracts/validation/abstract/Validatable.sol, 122
	PUSH2 S1, S1
	ISNULL
	THROWIF 63
	MYADDR
	PUSH S2
	CALLREF {
		CALL $Validation_no_obj_notEquals_macro$
	}
	.loc ../contracts/validation/abstract/Validatable.sol, 0
}
IFNOT
.loc ../contracts/validation/abstract/Validatable.sol, 128
DROP2
.loc ../contracts/upgrade/abstract/UpgradableByRequest.sol, 61
DUP
ISNULL
PUSHCONT {
	GETGLOB 9
}
PUSHCONT {
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
}
IFELSE
.loc ../contracts/upgrade/abstract/UpgradableByRequest.sol, 63
CALLREF {
	CALL $_getDeployParamsInternal_internal_macro$
}
CALLREF {
	CALL $_getVersionInternal_internal_macro$
}
CALLREF {
	CALL $_getUpgraderInternal_internal_macro$
}
FALSE
NEWC
STSLICECONST x6_
STI 1
STSLICECONST x1_
STSLICE
PUSHINT 1
STUR 111
ROLLREV 3
NEWC
STSLICECONST x283c940c
STU 32
STREF
STSLICE
STBREFR
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/upgrade/abstract/UpgradableByRequest.sol, 0
DROP

.globl	_setUpgraderInternal_internal
.type	_setUpgraderInternal_internal, @function
CALL $_setUpgraderInternal_internal_macro$

.macro _setUpgraderInternal_internal_macro
.loc ../contracts/upgrade/abstract/UpgradableByRequest.sol, 78
GETGLOB 13
.loc ../contracts/upgrade/abstract/UpgradableByRequest.sol, 79
OVER
SETGLOB 13
.loc ../contracts/upgrade/abstract/UpgradableByRequest.sol, 81
SWAP
PUSHSLICE xc0000000000000000000000001
NEWC
STSLICE
ROTREV
NEWC
STSLICECONST x76b2e05c
STSLICE
SWAP
NEWC
STSLICE
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../contracts/upgrade/abstract/UpgradableByRequest.sol, 0

.globl	_getUpgraderInternal_internal
.type	_getUpgraderInternal_internal, @function
CALL $_getUpgraderInternal_internal_macro$

.macro _getUpgraderInternal_internal_macro
.loc ../contracts/upgrade/abstract/UpgradableByRequest.sol, 90
GETGLOB 13
.loc ../contracts/upgrade/abstract/UpgradableByRequest.sol, 0

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
.loc ../examples/contracts/factory/FactoryInstance.sol, 39
PUSHINT 0
SETGLOB 10
PUSHINT 0
SETGLOB 11
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 12
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 13
.loc ../examples/contracts/factory/FactoryInstance.sol, 42
CTOS
LDU 32
LDMSGADDR
ENDS
.loc ../examples/contracts/factory/FactoryInstance.sol, 51
SWAP
CALLREF {
	CALL $_setIdInternal_internal_macro$
}
.loc ../examples/contracts/factory/FactoryInstance.sol, 52
CALLREF {
	CALL $_setFactoryInternal_internal_macro$
}
.loc ../examples/contracts/factory/FactoryInstance.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro check
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../examples/contracts/factory/FactoryInstance.sol, 55
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDMSGADDR
	}
	IF
}
PUSHCONT {
	LDI 1
	SWAP
	NULLROTRIFNOT
	PUSHCONT {
		LDMSGADDR
	}
	IF
}
IFELSE
ENDS
.loc ../examples/contracts/factory/FactoryInstance.sol, 0
CALLREF {
	CALL $check_internal_macro$
}
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro check_internal_macro
.loc ../examples/contracts/factory/FactoryInstance.sol, 55
DUP
GETGLOB 9
.loc ../contracts/validation/abstract/Validatable.sol, 65
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/validation/abstract/Validatable.sol, 68
OVER
ISNULL
PUSHCONT {
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
}
PUSHCONT {
	PUSH2 S1, S1
	ISNULL
	THROWIF 63
}
IFELSE
.loc ../contracts/validation/abstract/Validatable.sol, 71
DUP
PARSEMSGADDR
INDEX 3
PLDU 256
EQINT 0
OVER
MYADDR
SDEQ
OR
PUSHCONT {
	.loc ../contracts/validation/abstract/Validatable.sol, 72
	OVER
	NIP
	.loc ../contracts/validation/abstract/Validatable.sol, 0
}
IF
.loc ../contracts/validation/abstract/Validatable.sol, 75
ROLL 3
PUSHINT 202
.loc ../contracts/validation/abstract/Validatable.sol, 121
OVER
ISNULL
PUSHCONT {
	.loc ../contracts/validation/abstract/Validatable.sol, 122
	PUSH2 S1, S1
	ISNULL
	THROWIF 63
	MYADDR
	PUSH S2
	CALLREF {
		CALL $Validation_no_obj_notEquals_macro$
	}
	.loc ../contracts/validation/abstract/Validatable.sol, 0
}
IFNOT
.loc ../contracts/validation/abstract/Validatable.sol, 128
DROP2
.loc ../examples/contracts/factory/FactoryInstance.sol, 64
TUPLE 0
NEWC
PUSHSLICE x496e7374616e636520776974682049443a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $_getIdInternal_internal_macro$
}
PUSHINT 0
BLKPUSH 2, 0
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $console_no_obj_log_macro$
}
.loc ../contracts/validation/abstract/Validatable.sol, 78
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/validation/abstract/Validatable.sol, 0
DROP2
.loc ../examples/contracts/factory/FactoryInstance.sol, 0

.globl	_getIdInternal_internal
.type	_getIdInternal_internal, @function
CALL $_getIdInternal_internal_macro$

.macro _getIdInternal_internal_macro
.loc ../examples/contracts/factory/FactoryInstance.sol, 68
GETGLOB 11
.loc ../examples/contracts/factory/FactoryInstance.sol, 0

.globl	_setIdInternal_internal
.type	_setIdInternal_internal, @function
CALL $_setIdInternal_internal_macro$

.macro _setIdInternal_internal_macro
.loc ../examples/contracts/factory/FactoryInstance.sol, 72
GETGLOB 11
.loc ../examples/contracts/factory/FactoryInstance.sol, 73
OVER
SETGLOB 11
.loc ../examples/contracts/factory/FactoryInstance.sol, 76
SWAP
PUSHSLICE xc00000000000000000000000001bf9314d
NEWC
STSLICE
STU 32
STU 32
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../examples/contracts/factory/FactoryInstance.sol, 0

.globl	_getFactoryInternal_internal
.type	_getFactoryInternal_internal, @function
CALL $_getFactoryInternal_internal_macro$

.macro _getFactoryInternal_internal_macro
.loc ../examples/contracts/factory/FactoryInstance.sol, 83
GETGLOB 12
.loc ../examples/contracts/factory/FactoryInstance.sol, 0

.globl	_setFactoryInternal_internal
.type	_setFactoryInternal_internal, @function
CALL $_setFactoryInternal_internal_macro$

.macro _setFactoryInternal_internal_macro
.loc ../examples/contracts/factory/FactoryInstance.sol, 87
GETGLOB 12
.loc ../examples/contracts/factory/FactoryInstance.sol, 88
OVER
SETGLOB 12
.loc ../examples/contracts/factory/FactoryInstance.sol, 91
SWAP
PUSHSLICE xc0000000000000000000000001
NEWC
STSLICE
ROTREV
NEWC
STSLICECONST x4d21d8f0
STSLICE
SWAP
NEWC
STSLICE
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../examples/contracts/factory/FactoryInstance.sol, 0

.macro getVersion
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/upgrade/abstract/Version.sol, 14
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/upgrade/abstract/Version.sol, 0
CALLREF {
	CALL $getVersion_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2913553711
	STUR 130
	STU 32
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	STU 32
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getVersion_internal_macro
.loc ../contracts/upgrade/abstract/Version.sol, 25
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 64
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
CALLREF {
	CALL $_getVersionInternal_internal_macro$
}
.loc ../contracts/upgrade/abstract/Version.sol, 0

.globl	_setVersionInternal_internal
.type	_setVersionInternal_internal, @function
CALL $_setVersionInternal_internal_macro$

.macro _setVersionInternal_internal_macro
.loc ../contracts/upgrade/abstract/Version.sol, 34
DUP
ISNULL
PUSHCONT {
	GETGLOB 10
}
PUSHCONT {
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
}
IFELSE
.loc ../contracts/upgrade/abstract/Version.sol, 35
PUSH S2
SETGLOB 10
.loc ../contracts/upgrade/abstract/Version.sol, 38
ROT
PUSHSLICE xc00000000000000000000000000dddc7d4
NEWC
STSLICE
STU 32
STU 32
ENDC
PUSHINT 0
SENDRAWMSG
DROP
.loc ../contracts/upgrade/abstract/Version.sol, 0

.globl	_getVersionInternal_internal
.type	_getVersionInternal_internal, @function
CALL $_getVersionInternal_internal_macro$

.macro _getVersionInternal_internal_macro
.loc ../contracts/upgrade/abstract/Version.sol, 47
GETGLOB 10
.loc ../contracts/upgrade/abstract/Version.sol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDU 32
LDU 32
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
ENDS
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 0
	PUSHINT 1
	PUSH S2
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 32
	}
	IF
	PUSHINT 2
	PUSH S3
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PUSHREFSLICE {
			.blob x8000000000000000000000000000000000000000000000000000000000000000001_
		}
	}
	IFNOT
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STU 32
STU 32
STSLICE
GETGLOB 13
NEWC
STSLICE
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice hasPubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; hasPubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.globl	console_with_obj_log
.type	console_with_obj_log, @function
CALL $console_with_obj_log_macro$

.macro console_with_obj_log_macro
.loc ../node_modules/locklift/src/console.sol, 10
DUP
PUSHREFSLICE {
	.blob xc600fffffffffffffffffffffffffffffffffffffffffffffffffe2468acf13579bc0000000000000000000000000903f4294_
}
NEWC
STSLICE
STREF
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../node_modules/locklift/src/console.sol, 0

.globl	console_no_obj_log
.type	console_no_obj_log, @function
CALL $console_no_obj_log_macro$

.macro console_no_obj_log_macro
.loc ../node_modules/locklift/src/console.sol, 10
PUSHREFSLICE {
	.blob xc600fffffffffffffffffffffffffffffffffffffffffffffffffe2468acf13579bc0000000000000000000000000903f4294_
}
NEWC
STSLICE
STREF
ENDC
PUSHINT 0
SENDRAWMSG
.loc ../node_modules/locklift/src/console.sol, 0

.globl	Validation_with_obj_notEquals
.type	Validation_with_obj_notEquals, @function
CALL $Validation_with_obj_notEquals_macro$

.macro Validation_with_obj_notEquals_macro
.loc ../contracts/validation/libraries/Validation.sol, 14
PUSHINT 2
MAX
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
DUP
PUSHCONT {
	DROP
	OVER
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	NEQINT 0
	OVER2
	SDEQ
	NOT
	AND
}
IF
THROWANYIFNOT
.loc ../contracts/validation/libraries/Validation.sol, 0
DROP

.globl	Validation_no_obj_notEquals
.type	Validation_no_obj_notEquals, @function
CALL $Validation_no_obj_notEquals_macro$

.macro Validation_no_obj_notEquals_macro
.loc ../contracts/validation/libraries/Validation.sol, 14
PUSHINT 2
MAX
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
DUP
PUSHCONT {
	DROP
	OVER
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	NEQINT 0
	OVER2
	SDEQ
	NOT
	AND
}
IF
THROWANYIFNOT
.loc ../contracts/validation/libraries/Validation.sol, 0
DROP2

.globl	Validation_with_obj_notEmpty
.type	Validation_with_obj_notEmpty, @function
CALL $Validation_with_obj_notEmpty_macro$

.macro Validation_with_obj_notEmpty_macro
.loc ../contracts/validation/libraries/Validation.sol, 29
PUSHINT 2
MAX
OVER
CTOS
SEMPTY
NOT
THROWANYIFNOT
.loc ../contracts/validation/libraries/Validation.sol, 0

.globl	Validation_no_obj_notEmpty
.type	Validation_no_obj_notEmpty, @function
CALL $Validation_no_obj_notEmpty_macro$

.macro Validation_no_obj_notEmpty_macro
.loc ../contracts/validation/libraries/Validation.sol, 29
PUSHINT 2
MAX
SWAP
CTOS
SEMPTY
NOT
THROWANYIFNOT
.loc ../contracts/validation/libraries/Validation.sol, 0

.macro public_function_selector
DUP
PUSHINT 772101102
LEQ
IFJMPREF {
	DUP
	PUSHINT 372553142
	EQUAL
	IFJMPREF {
		CALL $check$
	}
	DUP
	PUSHINT 416385552
	EQUAL
	IFJMPREF {
		CALL $upgrade$
	}
	DUP
	PUSHINT 766070063
	EQUAL
	IFJMPREF {
		CALL $getVersion$
	}
	DUP
	PUSHINT 772101102
	EQUAL
	IFJMPREF {
		CALL $getUpgrader$
	}
}
DUP
PUSHINT 1965223820
LEQ
IFJMPREF {
	DUP
	PUSHINT 1772174412
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 1965223820
	EQUAL
	IFJMPREF {
		CALL $requestUpgrade$
	}
}

